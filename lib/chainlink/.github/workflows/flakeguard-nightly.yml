name: Flakeguard Nightly

on:
  schedule:
    # Run every night at 3:00 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  trigger-flaky-test-detection-for-core:
    name: Find Flaky Tests in Core
    uses: ./.github/workflows/flakeguard.yml
    with:
      repoUrl: 'https://github.com/smartcontractkit/chainlink'
      headRef: 'develop'
      projectPath: '.'
      maxPassRatio: '1.0'
      runAllTests: true
      extraArgs: '{ "skipped_tests": "", "test_repeat_count": "5", "all_tests_runner": "ubuntu22.04-32cores-128GB", "all_tests_runner_count": "3", "run_with_race": "false" }'
      slackNotificationAfterTestsChannelId: 'C07TRF65CNS' #flaky-test-detector-notifications
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.QA_SLACK_API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      FLAKEGUARD_SPLUNK_ENDPOINT: ${{ secrets.FLAKEGUARD_SPLUNK_ENDPOINT }} # Skip sending data to Splunk while testing the changes
      FLAKEGUARD_SPLUNK_HEC: ${{ secrets.FLAKEGUARD_SPLUNK_HEC }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  trigger-flaky-test-detection-for-deployment:
    name: Find Flaky Tests in Deployment
    uses: ./.github/workflows/flakeguard.yml
    with:
      repoUrl: 'https://github.com/smartcontractkit/chainlink'
      headRef: 'develop'
      projectPath: 'deployment'
      maxPassRatio: '1.0'
      runAllTests: true
      extraArgs: '{ "skipped_tests": "", "test_repeat_count": "5", "all_tests_runner": "ubuntu22.04-32cores-128GB", "all_tests_runner_count": "3", "run_with_race": "false" }'
      slackNotificationAfterTestsChannelId: 'C07TRF65CNS' #flaky-test-detector-notifications
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.QA_SLACK_API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      FLAKEGUARD_SPLUNK_ENDPOINT: ${{ secrets.FLAKEGUARD_SPLUNK_ENDPOINT }}
      FLAKEGUARD_SPLUNK_HEC: ${{ secrets.FLAKEGUARD_SPLUNK_HEC }}      
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
