name: "CRIB Action"
description: "Spin up a CRIB environment. Optionally run tests and tear it down."

inputs:
  aws-role-duration-seconds:
    description: "Duration in seconds for AWS role"
    required: false
    default: "3600"
  aws-role-arn:
    description: "AWS Role ARN for CRIB"
    required: true
  aws-region:
    description: "AWS Region"
    required: true
  aws-account-id:
    description: "AWS Account ID"
    required: true
  api-gw-host-crib:
    description: "API Gateway Host for CRIB"
    required: true
  api-gw-host-k8s:
    description: "API Gateway Host for K8s"
    required: true
  k8s-cluster-name:
    description: "Kubernetes cluster name"
    required: true
  aws-token-issuer-role-arn:
    description: "AWS Role ARN for token issuer"
    required: true
  aws-token-issuer-lambda-url:
    description: "AWS Lambda URL for token issuer"
    required: true
  ingress-base-domain:
    description: "Ingress base domain"
    required: true
  k8s-staging-ingress-suffix:
    description: "K8S staging ingress suffix"
    required: true
  gap-url-integration-tests:
    description: "GAP URL for integration tests"
    required: true
  crib-alert-slack-webhook:
    description: "CRIB alert Slack webhook"
    required: true
  crib-chainlink-docker-image-name:
    description: "Docker image name"
    required: true
  crib-chainlink-docker-image-tag:
    description: "Docker image tag"
    required: true
  crib-cleanup-ttl:
    # See: https://kyverno.io/docs/writing-policies/cleanup/
    description: "Time to keep environment up for before destroying it. Examples: 15m, 1h, 3d"
    required: false
    default: "1h"
  crib-destroy-environment:
    description: "Whether to destroy the CRIB environment after testing"
    required: false
    default: "true"
  integration-tests-run:
    description: "Whether to run integration tests"
    required: false
    default: "true"
  main-dns-zone:
    description:
      "The DNS zone is used for exposing services. It is required when using the
      dynamic local proxy to prevent sending requests and exposing sensitive
      information to random external endpoints. This ensures that the dynamic
      local proxy is used only for the specific DNS zone."
runs:
  using: "composite"
  steps:
    - uses: cachix/install-nix-action@ba0dd844c9180cbf77aa72a116d6fbc515d0e87b # v27
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: setup-gap crib
      uses: smartcontractkit/.github/actions/setup-gap@00b58566e0ee2761e56d9db0ea72b783fdb89b8d # setup-gap@0.4.0
      with:
        aws-role-duration-seconds: ${{ inputs.aws-role-duration-seconds }}
        aws-role-arn: ${{ inputs.aws-role-arn }}
        api-gateway-host: ${{ inputs.api-gw-host-crib }}
        aws-region: ${{ inputs.aws-region }}
        ecr-private-registry: ${{ inputs.aws-account-id }}
        k8s-cluster-name: ${{ inputs.k8s-cluster-name }}
        gap-name: crib
        use-private-ecr-registry: true
        use-tls: true
        proxy-port: 8080

    - name: setup-gap k8s
      uses: smartcontractkit/.github/actions/setup-gap@00b58566e0ee2761e56d9db0ea72b783fdb89b8d # setup-gap@0.4.0
      with:
        aws-role-duration-seconds: ${{ inputs.aws-role-duration-seconds }}
        aws-role-arn: ${{ inputs.aws-role-arn }}
        api-gateway-host: ${{ inputs.api-gw-host-k8s }}
        aws-region: ${{ inputs.aws-region }}
        ecr-private-registry: ${{ inputs.aws-account-id }}
        k8s-cluster-name: ${{ inputs.k8s-cluster-name }}
        gap-name: k8s
        use-private-ecr-registry: true
        use-k8s: true
        proxy-port: 8443

    - name: Setup GitHub token using GATI
      id: token
      uses: smartcontractkit/.github/actions/setup-github-token@ef78fa97bf3c77de6563db1175422703e9e6674f # setup-github-token@0.2.1
      with:
        aws-role-arn: ${{ inputs.aws-token-issuer-role-arn }}
        aws-lambda-url: ${{ inputs.aws-token-issuer-lambda-url }}
        aws-region: ${{ inputs.aws-region }}
        aws-role-duration-seconds: "1800"

    - name: Deploy and validate CRIB Environment for Core
      uses: smartcontractkit/.github/actions/crib-deploy-environment@9e5e6b9d746287641f80af9decf42a0791056e5b # crib-deploy-environment@8.5.2
      id: deploy-crib
      with:
        github-token: ${{ steps.token.outputs.access-token }}
        aws-ecr-private-registry: ${{ inputs.aws-account-id }}
        aws-region: ${{ inputs.aws-region }}
        aws-role-arn: ${{ inputs.aws-role-arn }}
        ingress-base-domain: ${{ inputs.ingress-base-domain }}
        k8s-cluster-name: ${{ inputs.k8s-cluster-name }}
        chainlink-team: releng
        chainlink-product: crib
        command: "core-dev-simulated-core-ocr1"
        crib-alert-slack-webhook: ${{ inputs.crib-alert-slack-webhook }}
        product-image: ${{ inputs.crib-chainlink-docker-image-name }}
        product-image-tag: ${{ inputs.crib-chainlink-docker-image-tag }}
        ns-ttl: ${{ inputs.crib-cleanup-ttl }}
        main-dns-zone: ${{ inputs.main-dns-zone }}

    - name: Set up Go
      uses: ./.github/actions/setup-go
      with:
        go-version-file: "go.mod"

    - name: Run CRIB integration test
      if: inputs.integration-tests-run == 'true'
      shell: bash
      working-directory: integration-tests/crib
      env:
        K8S_STAGING_INGRESS_SUFFIX: ${{ inputs.k8s-staging-ingress-suffix }}
        CRIB_NAMESPACE: ${{ steps.deploy-crib.outputs.devspace-namespace }}
        CRIB_NETWORK: geth
        CRIB_NODES: 5
        GAP_URL: ${{ inputs.gap-url-integration-tests }}
        SETH_LOG_LEVEL: info
        TEST_PERSISTENCE: true
        E2E_TEST_CHAINLINK_IMAGE: public.ecr.aws/chainlink/chainlink
        E2E_TEST_CHAINLINK_VERSION: latest
      run: go test -v -run TestCRIBChaos

    - name: Destroy CRIB Environment
      if: inputs.crib-destroy-environment == 'true' && always() && steps.deploy-crib.outputs.devspace-namespace != ''
      uses: smartcontractkit/.github/actions/crib-purge-environment@142671bc21953c8cc3edbd21848c50b5ec201c2a # crib-purge-environment@0.3.0
      with:
        namespace: ${{ steps.deploy-crib.outputs.devspace-namespace }}
